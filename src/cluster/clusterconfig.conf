akka {
 # loglevel = "DEBUG"
  loglevel = "INFO"
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 100
    }
    default-mailbox {
      mailbox-capacity = 10000
    }
//    serializers {
//      msgpack = "com.tiantian.stranger.akka.serialzers.MsgpackSerialzer"
//    }
//    serialization-bindings {
//      "com.tiantian.stranger.akka.event.Event" = msgpack
//    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
       "akka.tcp://StrangerClusterActorSystem@127.0.0.1:2560",
       "akka.tcp://StrangerClusterActorSystem@127.0.0.1:2561"]
       auto-down-unreachable-after = 30s
  }

}
akka.extensions = ["akka.cluster.client.ClusterClientReceptionist",
                   "akka.cluster.ddata.DistributedData"]
akka.cluster.metrics.enabled=off

akka.persistence.journal.plugin = "akka.persistence.journal.inmem"
# Absolute path to the default snapshot store plugin configuration entry.
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"

dbDispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 20.0
    parallelism-max = 100
  }
  throughput = 100
}

userDbDispatcher {
  type = Dispatcher
  executor = "fork-join-executor"
  fork-join-executor {
    parallelism-min = 2
    parallelism-factor = 10.0
    parallelism-max = 50
  }
  throughput = 100
}